<template>
  <div class="container">
    <searchTop ></searchTop><!--:searchtype="stype"-->
    <div class="detail-one">
      <div class="top-one">
      </div>
      <div class="top-two" v-for="item in getTitltContent">
        <div class="title">第{{item.sort}}类 {{item.title}}</div>
        <div class="text">{{item.content}}</div>
      </div>
      </div>
    <div class="clear"></div>
    <div class="note" v-for="item in getTitltContent">
      <div class="annotation" v-html="item.note" style="font-size: .9rem;margin: .5rem .5rem">
    </div>

    <div class="graypanel">
      <div class="propanel">
        <ul>
          <li v-for="(i,item) in ErAllTitle" v-bind:class="{ active1 : false }" @click.stop="selectPro(item,item.id)">{{i.similar_code}}</li>
        </ul>
      </div>
      <div class="regionpanel">
          <span v-for="item in number">{{item}}

          </span>
        <div class="title-content" v-for="i in dataTitltContent">
          <div v-html="i.content" style="font-size: .8rem;margin: .5rem"></div>
        </div>
      </div>
    </div>
      <div class="footer-annotation" v-for="i in dataTitltContent">
        <div v-html="i.note">
        </div>
      </div>
  </div>
  </div>
</template>
<script>
  import api from '../../fetch/api'
  import {Panel, Icon, Flexbox, FlexboxItem, CellBox} from 'vux'
  export default {
    components: {
      Panel,
      Icon,
      Flexbox,
      FlexboxItem,
      CellBox
    },
    data () {
      return {
        isOpenPro: false,
        isOpenState: false,
        isOpenIndustry: false,
        number: [],
        isb: false,
        ErAllTitle: [],
        dataList: [],
        getTitltContent: [],
        dataTitltContent: []
      }
    },
    created () {
    },
    methods: {
      selectPro (item) {
        this.number = this.ErAllTitle[item].title
        api.getErcontent(this.ErAllTitle[item].id).then((res) => {
          console.log(res)
          this.dataTitltContent = res.dataList
        })
      },
      getEr () {
        api.getErAllTitle(this.$route.query.id).then((res) => {
          this.ErAllTitle = res.dataList
        })
      },
      getTitlt () {
        api.getTitleType(this.$route.query.id).then((res) => {
          this.getTitltContent = res.dataList
        })
      }
    },
    prop: [],
    mounted: function () {
      document.body.scrollTop = 0
      this.getEr()
      this.getTitlt()
    }
  }
</script>
<style lang="less" scoped>
  .container {
    .detail-one{
      font-size: .9rem;
      margin-top: 4rem;
      .top-one{
        .top-one-img{
          width: 5rem;
          img{
            width: 3rem;
            height: 3rem;
            border: 1px solid;
          }
        }
      }
      .top-two{
        height: 100%;
        float: left;
        margin: .5rem .5rem;
        .title{
          font-size: 1.5rem;
          font-weight: 600;
        }
        .text{
          text-indent:25px
        }
      }
      .annotation{
        margin: 1rem .5rem;
        font-size: .9rem;
      }

    }

    .graypanel {
      width: 100%;
      top: 96px;
      height: 96%;
      .regionpanel{
        span {
          font-size: .9rem;
          font-weight: 600;
        }
      }
      .propanel, .graycontent {
        float: left;
        width: 40%;
        height: 80%;
        overflow: auto;
        background-color: white;
        li {
          font-size: .75rem;
          line-height: 2rem;
          padding-left: 8px;
          border-bottom: 0.5px solid #dcdcdc;
          border-right: 1px solid #dcdcdc;
        }
      }
      .graycontent {
        text-align: center;
        width: 50%;
        height: auto;
        max-height: 70%;
        margin: 25% 25%;
        vertical-align: middle;
      }
      .mover{
        width: 100%;
        background: #ffffff;
        .mover-content{
          .mover-header{
            padding: 1rem;
            border-bottom:1px solid #c0c0c0;
          }
          .mover-btn {
            ul {
              height: 1rem;
              padding: 2rem;
              li {
                width: 3rem;
                height: 1.5rem;
                text-align: center;
                padding-top: .5rem;
                margin-left: .7rem;
                border-radius: 3px;
                float: left;
                overflow: hidden;
                background: #F2F2F2;
                list-style: none;
                font-size: .2rem;
              }
            }
          }
        }
        .mover-footer{
          height: 3rem;
          border-top:1px solid #c0c0c0;
          span{
            font-size: 1rem;
            text-align: center;
            position: absolute;
            width: 6rem;
            height: 1.5rem;
            border-radius: 3px;
            border: 1px solid #797979;
            margin-top: .8rem;
            left:5rem;
          }
          span:last-child{
            margin-left: 8rem;
          }
        }
      }
    }
    li:hover{
      background: #c0c0c0;
    }
    .clear{
      clear: both;
    }
  }
</style>
