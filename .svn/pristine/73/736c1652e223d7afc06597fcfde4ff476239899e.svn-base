<template>
  <div class="container">
    <searchTop style="border-bottom:0rem" :placeholder="placeholder"></searchTop>
    <div v-for="item in getTitltContent" v-if="show" class="explain">
      <div class="title1">第{{item.sort}}类 {{item.title}}</div>
      <div class="text1">{{item.content}}</div>
    </div>
    <!-- 大类 名称说明 -->
    <div class="detail-one" ref="detailone" :class="{ 'class-a': isA, 'class-b': isB}">
      <div class="top-two" v-for="item in getTitltContent" style="z-index:0;width:100%">
        <div class="title">第{{item.sort}}类 {{item.title}}</div>
        <div class="text">{{item.content}}</div>
      </div>
    </div>
    <div class="clear"></div>

    <div class="note" v-for="item in getTitltContent">
      <!-- 注释 -->
      <div class="annotation" v-html="item.note" style="font-size: .9rem;margin:.5rem;background:white;padding:0 0.8rem;box-shadow:0px 10px 10px 0px #f2f2f2;"></div>

      <div class="graypanel">
        <div class="propanel">
          <ul style="margin-bottom:4rem">
            <li v-for="(i,item) in ErAllTitle" :class="{ active1 : false }" @click.stop="selectPro(item,item.id)">【{{i.similar_code}}】</li>
          </ul>
        </div>
        <!-- 信息 -->
        <div class="regionpanel">
          <span v-for="item in number">{{item}}</span>
          <div class="title-content" v-for="i in dataTitltContent">
            <div v-html="getred(i.content)" style="font-size: .8rem;"></div>
          </div>
          <div class="footer-annotation" v-for="i in dataTitltContent">
            <div v-html="getred(i.note)"></div>
          </div>
        </div>
        <div style="clear:both"></div>
      </div>
    </div>
  </div>
</template>
<script>
import api from '../../fetch/api'
import { Panel, Icon, Flexbox, FlexboxItem, CellBox } from 'vux'
export default {
  components: {
    Panel,
    Icon,
    Flexbox,
    FlexboxItem,
    CellBox,

  },
  data() {
    return {
      show: false,
      show1: true,
      scroll: '',
      isOpenPro: false,
      isOpenState: false,
      isOpenIndustry: false,
      number: [],
      isb: false,
      ErAllTitle: [],
      dataList: [],
      getTitltContent: [],
      dataTitltContent: [],
      isA: true,
      isB: false,
      active1: true,
      placeholder: this.$store.state.searchString
    }
  },
  created() {
  },
  methods: {
    // 滚轮变化吸顶效果hk
    menu() {
      this.scroll = document.body.scrollTop;
      // console.log(this.scroll)
      if (this.scroll == 0) {
        this.show = false;
        this.show1 = true;
      }
      if (this.scroll > 0) {
        this.show = true;
        this.show1 = false;
      }
    },
    selectPro(item) {
      this.number = this.ErAllTitle[item].title
      api.getErcontent(this.ErAllTitle[item].id).then((res) => {
        this.dataTitltContent = res.dataList
        this.active1 = true
      })
    },
    getEr() {
      api.getErAllTitle(this.$route.query.id).then((res) => {
        this.ErAllTitle = res.dataList
        this.number = res.dataList[0].title
        api.getErcontent(res.dataList[0].id).then((res) => {
          this.dataTitltContent = res.dataList
        })
      })
    },
    getTitlt() {
      api.getTitleType(this.$route.query.id).then((res) => {
        this.getTitltContent = res.dataList
      })
    },
    getred(value) {
      let search = this.$store.state.searchString;
      if (search) {
        var regS = new RegExp(search, "g");
        return value.replace(regS, "<strong>" + search + "</strong>");
      } else {
        return value
      }

    }
  },
  prop: [],
  mounted: function() {
    window.addEventListener('scroll', this.menu)
    this.getEr()
    this.getTitlt()
    console.log(this.$refs.detailone.style.height)
  }
}
</script>
<style lang="less" scoped>
.container {

  background: #f2f2f2;
  .detail-one {
    font-size: .9rem;
    margin-top: 3.5rem;
    .top-two {
      img {
        width: 4rem;
        height: 4rem;
        border: 1px solid gray;
        display: inline-block;
        position: absolute;
        left: -4.5rem;
      }
    }
    .top-two {
      height: 100%;
      float: left;
      padding: .5rem .5rem;
      position: relative;
      box-sizing: border-box;
      .title {
        font-size: 1rem;
        font-weight: 600;
        text-align: center;
        background: linear-gradient(90deg, #007bef, #53a6ff);
        color: #fff;
        height: 3.3rem;
        line-height: 3.3rem;
        border-radius: 5px;
        width: 100%;
        box-sizing: content-box;
      }
      .text {
        margin-top: 0.55rem;
        background: #fff;
        font-size: 0.7rem;
        padding: 0.83rem;
        color: #333;
      }
    }
    .annotation {
      font-size: .9rem;
      background: #fff;
    }
  }
  .graypanel {
    width: 100%;
    top: 96px;
    height: 96%;
    margin-top: 0.83rem;
    .regionpanel {
      background: green;
      padding: 0rem 0.44rem;
      float: left;
      width: 74%;
      background: #fff;
      padding-top: 0.4rem;
      span {
        font-size: .9rem;
        font-weight: 600;
      }
    }
    .propanel,
    .graycontent {
      float: left;
      height: 80%;
      overflow: auto;
      background-color: white;
      li {
        font-size: .75rem;
        line-height: 2rem;
        padding-left: 8px;
        background: ;
        color: #999;
      }
      li:hover {
        color: #007bfe;
        background: #fff;
      }
    }
    .propanel {
      width: 20%;
      float: left;
      background: #f2f2f2
    }
    .graycontent {
      text-align: center;
      width: 50%;
      height: auto;
      max-height: 70%;
      margin: 25% 25%;
      vertical-align: middle;
    }
    .mover {
      width: 100%;
      background: #ffffff;
      .mover-content {
        .mover-header {
          padding: 1rem;
          border-bottom: 1px solid #c0c0c0;
        }
        .mover-btn {

        }
      }
      .mover-footer {
        height: 3rem;
        border-top: 1px solid #c0c0c0;
        span {
          font-size: 1rem;
          text-align: center;
          position: absolute;
          width: 6rem;
          height: 1.5rem;
          border-radius: 3px;
          border: 1px solid #797979;
          margin-top: .8rem;
          left: 5rem;
        }
        span:last-child {
          margin-left: 8rem;
        }
      }
    }
  }
  li:hover {
    background: #f2f2f2;
  }
  .clear {
    clear: both;
  }
}

.ql-align-center {
  color: #007bfe!important
}

.explain {
  margin-top: 0.2rem; // background: #19B5FE;
  position: fixed;
  z-index: 1; // width: 100%;
  background: linear-gradient(90deg, #007bef, #53a6ff);
  padding: 0.5rem;
  border-radius: 0.3rem;
  width: 96.5%;
}

.explain div {
  font-size: 0.9rem; // padding: 0rem .5rem;
  color: white;
}

.footer-annotation {
  // margin-left: 9.3rem
}

.footer-annotation div {
  font-size: .8rem;
  padding-top: 0.5rem;
  margin-bottom: 4rem
}

.title-content {
  font-size: .8rem;
  margin: .5rem .5rem .5rem .5rem
}

.title-content p:nth-child(2) {
  margin-top: 1.4rem;
}

.note {
  margin-top: -2rem;
}

.active1 {
  background: #fff;
  color: #999;
}

.title1 {
  padding: 0.5rem 0.5rem;
  text-align: center;
}
.text1{
padding: 0 0.5rem;
}
</style>
