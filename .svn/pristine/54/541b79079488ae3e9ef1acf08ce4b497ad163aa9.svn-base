<template>
  <div>
    <div class="filter">
      <dl class="filter-info">
        <dd>
          <div style="box-sizing: border-box;" v-bind:class="[{classA : isb}]" @click="tClass">
            <div>驰名商标</div>
          </div>
        </dd>
        <dd>
          <span>类别</span>
        </dd>
        <dd @click="openIndustry">
          <span>{{business}}</span>
        </dd>
        <dd @click="openPro">
          <span>{{region}}</span>
        </dd>
        <dd @click="openState">
          <span>更多</span>
        </dd>
      </dl>
    </div>
    <div class="graypanel" v-show="isOpenPro" @click="isOpenPro=false">
      <div class="propanel">
        <ul>
          <li>不限</li>
          <li v-for="i in CiryList" v-bind:class="{ active: i===2 }" @click.stop="selectPro(i)">{{i.name}}</li>
        </ul>
      </div>
      <div class="regionpanel">
        <ul>
          <li>不限</li>
          <li v-for="j in erCiryList" @click="setRegion(j)">{{j.name}}</li>
        </ul>
      </div>
    </div>

    <div class="graypanel" v-show="isOpenIndustry" @click="isOpenIndustry=false">
      <div class="propanel">
        <ul>
          <li v-bind:class="{ active : true}">不限</li>
          <li v-for="i in typeList" v-bind:class="{ active1 : false }" @click.stop="selectPro(i)">{{i.name}}</li>
        </ul>
      </div>
      <div class="regionpanel">
        <ul>
          <li>不限</li>
          <li v-for="j in erTypeList" @click="newuBsiness(j)">{{j.name}}</li>
        </ul>
      </div>
    </div>

    <div class="graypanel" v-show="isOpenState" @click="isOpenState=false">
      <div class="mover">
        <div class="mover-content">
          <div class="mover-header">
            <span>商标类型</span>
          </div>
          <div class="mover-btn">
            <ul>
              <li>普通</li>
              <li>集体</li>
              <li>证明</li>
              <li>特殊</li>
            </ul>
          </div>
        </div>
        <div class="mover-content">
          <div class="mover-header">
            <span>商标形式类型</span>
          </div>
          <div class="mover-btn">
            <ul>
              <li>图形</li>
              <li>文字</li>
            </ul>
          </div>
        </div>
        <div class="mover-content">
          <div class="mover-header">
            <span>地理标志</span>
          </div>
          <div class="mover-btn">
            <ul>
              <li>是地理标志商标</li>
              <li>不是地理标志商标</li>
            </ul>
          </div>
        </div>
        <div class="mover-footer">
          <span>重置</span>
          <span @click="ascertain()">确定</span>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import api from '../fetch/api'
import { Tabbar, TabbarItem, Group, Cell } from 'vux'
export default {
  components: {
    Tabbar,
    TabbarItem,
    Group,
    Cell
  },
  data() {
    return {
      region: '地区',
      business: '行业',
      isOpenPro: false,
      isOpenState: false,
      isOpenIndustry: false,
      isb: false,
      typeList: '',
      CiryList: '',
      erTypeList: '',
      erCiryList: ''
    }
  },
  methods: {
    selectPro(i) {
      this.active1 = true
      this.erTypeList = i.secondLevelProfession
      this.erCiryList = i.items
    },
    loginOut() {
      this.$router.push('/login')	//暂时不做处理只去登录页面
    },
    gotoSearch() {
      this.$router.push('/search')
    },
    openPro() {
      this.isOpenPro = !this.isOpenPro
      this.isOpenIndustry = false
      this.isOpenState = false
      api.getCityList().then((res) => {
        console.log(res.dataList)
        this.CiryList = res.dataList
      })
    },
    tClass() {
      this.isb = true
    },
    ascertain() {
      this.isOpenState = false
    },
    openIndustry() {
      this.isOpenIndustry = !this.isOpenIndustry
      this.isOpenPro = false
      this.isOpenState = false
      api.getProfessionTypeList().then((res) => {
        this.typeList = res.dataList
      })
    },
    openState() {
      this.isOpenState = !this.isOpenState
      this.isOpenIndustry = false
      this.isOpenPro = false
    },
    setRegion(j) {
      this.region = j.name
    },
    newuBsiness(j) {
      this.business = j.name
    }

  },
  mounted: function() {
    document.body.scrollTop = 0
  }
}
</script>
<style lang="less" scoped>
.graypanel {
  position: fixed;
  width: 100%;
  z-index: 9999;
  background-color: rgba(99, 99, 99, .5);
  top: 96px;
  height: 96%;
  .propanel,
  .regionpanel,
  .graycontent {
    float: left;
    width: 40%;
    height: 80%;
    overflow: auto;
    background-color: white;
    li {
      font-size: .75rem;
      line-height: 2rem;
      padding-left: 8px;
      border-bottom: 0.5px solid #dcdcdc;
      border-right: 1px solid #dcdcdc;
    }
  }
  .regionpanel {
    float: left;
    width: 60%;
    height: 80%;
    background-color: #F2F2F2;
    li {
      font-size: .7rem;
      line-height: 2rem;
    }
  }
  .graycontent {
    text-align: center;
    width: 50%;
    height: auto;
    max-height: 70%;
    margin: 25% 25%;
    vertical-align: middle;
  }
  .mover {
    width: 100%;
    background: #ffffff;
    .mover-content {
      .mover-header {
        padding: 1rem;
        border-bottom: 1px solid #c0c0c0;
        >span {
          font-size: 1rem;
        }
      }
      .mover-btn {
        ul {
          padding: 1rem 0;
          overflow: hidden;
          li {
            padding: 0 10px;
            height: 1.8rem;
            line-height: 1.8rem;
            text-align: center;
            margin-left: .7rem;
            border-radius: 3px;
            float: left;
            background: #F2F2F2;
            list-style: none;
            font-size: .75rem;
          }
        }
      }
    }
    .mover-footer {
      height: 3rem;
      border-top: 1px solid #c0c0c0;
      display: flex;
      justify-content: center;
      align-items: center;
      span {
        font-size: 1rem;
        text-align: center;
        width: 6rem;
        height: 1.5rem;
        border-radius: 3px;
        border: 1px solid #797979;
        margin: 1rem;
      }
    }
  }
}

.active {
  background-color: #F2F2F2;
  color: #44C1FC;
}

.filter {
  position: fixed;
  top: 2.75rem;
  width: 100%;
  height: 2rem;
  z-index: 9;
}

.clear {
  clear: both;
}

.classA {
  background-color: #fff;
}

.filter-info {
  overflow: hidden;
  border-bottom: 1px solid #dfdfdf;
  display: flex;
  justify-content: center;
  background: white;
  dd {
    width: 17%;
    background: #F2F2F2;
    border: 1px solid #E5E5E5;
    border-radius: 4px;
    line-height: 2.2rem;
    font-size: .85rem;
    text-align: center;
    margin: .5rem .2rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    span::after {
      content: " ";
      display: inline-block;
      line-height: 1.2rem;
      height: 4px;
      width: 4px;
      border-width: 0 2px 2px 0;
      border-color: #333333;
      border-style: solid;
      -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
      transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
      position: relative;
      top: -3px;
      left: 8px;
    }
  }
}

dd:last-child {
  border-right: 0;
}
</style>
