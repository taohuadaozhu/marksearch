<template>
  <div class="container">
    <searchTop :searchtype="stype" :placeholder="placeholder"></searchTop>
    <div class="search-middle">
      <article>{{intro}}</article>
      <div class="search-odd">
        <span>历史搜索</span>
        <i class="iconfont icon-icon42" @click="deleteResent()"></i>
      </div>
      <div class="search-even">
        <p>
          <span v-for="i in SearchList" v-if="" @click="gotoGoodsItem(i)">{{i}}</span>
        </p>
      </div>
      <div class="search-odd" v-show="stype==='goods'">
        <span>热门商标</span>
      </div>
      <div class="search-even">
        <p>
          <span v-for="i in result" @click="gotoTrademarkDetails(i)">{{i.dataName}}</span>
        </p>
      </div>
    </div>
  </div>
</template>
<script>
import api from '../../fetch/api'
import { Panel, Icon, Flexbox, FlexboxItem, CellBox } from 'vux'
export default {
  components: {
    Panel,
    Icon,
    Flexbox,
    FlexboxItem,
    CellBox
  },
  data() {
    return {
      result: [],
      SearchList: [],
      stype: '',
      placeholder: '',
      data: {
        phoneId: '',
        keywordType: ''
      },
      intro:''
    }
  },
  created() {
    this.stype = this.$route.query.stype
    if (this.stype === 'goods') {
      this.placeholder = '请输入商品名称'
      this.data.keywordType = '1'  // 关键字类型       0:商标 ，1:商品
      api.getPopularBrand().then((res) => {
        this.result = res.results
      })
    } else if (this.stype === 'mark') {
      this.placeholder = '请输入您想查询的商标名称'
      this.data.keywordType = '0'
    } else {
      this.placeholder = '请输入主营业务查看对应类别'
      this.data.keywordType = '5'
    }

  },
  methods: {
    loginOut() {
      this.$router.push('login') // 暂时不做处理只去登录页面
    },
    gotoTrademarkDetails(item) {
      //regNum  intCls
      this.$router.push({ path: 'markdetail', query: { regNum: item.regNum, intCls: item.intCls } })
    },
    getData() {
      let phoneId = window.localStorage.mark_mobile;
      // let postdata={
      //   keyword:'',
      // }
      api.getNearSearchList(phoneId).then((res) => {
        if (this.stype === 'goods') {
          this.SearchList = res.results.goods
        } else if (this.type === 'mark') {
          this.SearchList = res.results.brand
        } else {
          this.SearchList = res.results.brandType
        }
      })
    },
    deleteResent() {
      if (this.data.phoneId) {
        api.deleteCaption(this.data).then((res) => {
          alert('删除成功')
          this.getData()
        })
      } else {
        if (this.stype === 'goods') {
          window.localStorage.nearGoods = '';
        } else if (this.stype === 'mark') {
          window.localStorage.nearBrand = '';
        } else {
          window.localStorage.nearType = '';
        }
        this.SearchList = []
      }

    },
    gotoGoodsItem(i) {
      if (this.stype === 'goods') {
        this.$router.push({ path: 'goodsItem', query: { searchkey: i } })
      } else if (this.stype === 'mark') {
        this.$router.push({ path: 'markSearchResults', query: { searchkey: i, stype: 'mark' } })
      } else {
        this.$router.push({path:'typeItem',query:{searchkey:i,stype:'typelist'}})
      }

      this.$store.commit('changeSearch', i);
    }
  },
  mounted: function() {
    this.data.phoneId = localStorage.mark_mobile
    document.body.scrollTop = 0
    if (localStorage.mark_mobile && localStorage.mark_mobile != 'undefined' && localStorage.mark_mobile != '') {
      this.getData()
    } else {
      if (this.stype === 'goods') {
        this.intro = '输入商品或服务名称，将会为您匹配到商标类别中的相关商品服务，从而方便您查询到相应类别下的商标'
        this.SearchList = window.localStorage.nearGoods.split(',').reverse();
      } else if (this.stype === 'mark'){
        this.intro = '输入您想注册的商标名称，查询是否已经存在近似商标，您还可以对商品/服务类别进行过滤查询，有助于评估在相应类别下该商标注册成功的可能性'
        this.SearchList = window.localStorage.nearBrand.split(',').reverse();
      }else{
        this.SearchList = window.localStorage.nearType.split(',').reverse();
      }
    }

  }
}
</script>
<style lang="less" scoped>
.search-middle {
  background-color: white;
  padding-top: 3.8rem;
  color: #333;
  article{
    text-indent: 2em;
    padding: .5rem 1rem;
    background: wheat;
  }
  .search-odd{
    margin: 1rem;
    height: 2rem;
    span {
      font-weight: bold;
    }
    i {
      float: right;
    }
  }
  .search-even {
    margin: 1rem;
    p {
      font-size: 1rem;
      span {
        margin: 0 .5px;
        display: inline-block;
        color: #666666;
        background-color: #F9F9F9;
        padding: 0 .77rem;
        font-size: 1rem;
        border-radius: 3px;
        line-height: 1.77rem;
      }
    }
  }
}
</style>
